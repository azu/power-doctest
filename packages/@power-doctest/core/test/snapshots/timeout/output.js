var _powerAssertVisitorKeys =
	'{"ArrayExpression":["elements"],"AssignmentExpression":["left","right"],"BinaryExpression":["left","right"],"InterpreterDirective":[],"Directive":["value"],"DirectiveLiteral":[],"BlockStatement":["directives","body"],"BreakStatement":["label"],"CallExpression":["callee","typeParameters","typeArguments","arguments"],"CatchClause":["param","body"],"ConditionalExpression":["test","consequent","alternate"],"ContinueStatement":["label"],"DebuggerStatement":[],"DoWhileStatement":["body","test"],"EmptyStatement":[],"ExpressionStatement":["expression"],"File":["program"],"ForInStatement":["left","right","body"],"ForStatement":["init","test","update","body"],"FunctionDeclaration":["id","typeParameters","params","predicate","returnType","body"],"FunctionExpression":["id","typeParameters","params","predicate","returnType","body"],"Identifier":["typeAnnotation","decorators"],"IfStatement":["test","consequent","alternate"],"LabeledStatement":["label","body"],"StringLiteral":[],"NumericLiteral":[],"NullLiteral":[],"BooleanLiteral":[],"RegExpLiteral":[],"LogicalExpression":["left","right"],"MemberExpression":["object","property"],"NewExpression":["callee","typeParameters","typeArguments","arguments"],"Program":["directives","body"],"ObjectExpression":["properties"],"ObjectMethod":["decorators","key","typeParameters","params","returnType","body"],"ObjectProperty":["decorators","key","value"],"RestElement":["argument","typeAnnotation"],"ReturnStatement":["argument"],"SequenceExpression":["expressions"],"ParenthesizedExpression":["expression"],"SwitchCase":["test","consequent"],"SwitchStatement":["discriminant","cases"],"ThisExpression":[],"ThrowStatement":["argument"],"TryStatement":["block","handler","finalizer"],"UnaryExpression":["argument"],"UpdateExpression":["argument"],"VariableDeclaration":["declarations"],"VariableDeclarator":["id","init"],"WhileStatement":["test","body"],"WithStatement":["object","body"],"AssignmentPattern":["left","right","decorators"],"ArrayPattern":["elements","typeAnnotation"],"ArrowFunctionExpression":["typeParameters","params","predicate","returnType","body"],"ClassBody":["body"],"ClassExpression":["decorators","id","typeParameters","superClass","superTypeParameters","mixins","implements","body"],"ClassDeclaration":["decorators","id","typeParameters","superClass","superTypeParameters","mixins","implements","body"],"ExportAllDeclaration":["source","attributes","assertions"],"ExportDefaultDeclaration":["declaration"],"ExportNamedDeclaration":["declaration","specifiers","source","attributes","assertions"],"ExportSpecifier":["local","exported"],"ForOfStatement":["left","right","body"],"ImportDeclaration":["specifiers","source","attributes","assertions"],"ImportDefaultSpecifier":["local"],"ImportNamespaceSpecifier":["local"],"ImportSpecifier":["imported","local"],"ImportExpression":["source","options"],"MetaProperty":["meta","property"],"ClassMethod":["decorators","key","typeParameters","params","returnType","body"],"ObjectPattern":["decorators","properties","typeAnnotation"],"SpreadElement":["argument"],"Super":[],"TaggedTemplateExpression":["tag","typeParameters","quasi"],"TemplateElement":[],"TemplateLiteral":["quasis","expressions"],"YieldExpression":["argument"],"AwaitExpression":["argument"],"Import":[],"BigIntLiteral":[],"ExportNamespaceSpecifier":["exported"],"OptionalMemberExpression":["object","property"],"OptionalCallExpression":["callee","typeParameters","typeArguments","arguments"],"ClassProperty":["decorators","variance","key","typeAnnotation","value"],"ClassAccessorProperty":["decorators","key","typeAnnotation","value"],"ClassPrivateProperty":["decorators","variance","key","typeAnnotation","value"],"ClassPrivateMethod":["decorators","key","typeParameters","params","returnType","body"],"PrivateName":["id"],"StaticBlock":["body"],"ImportAttribute":["key","value"],"AnyTypeAnnotation":[],"ArrayTypeAnnotation":["elementType"],"BooleanTypeAnnotation":[],"BooleanLiteralTypeAnnotation":[],"NullLiteralTypeAnnotation":[],"ClassImplements":["id","typeParameters"],"DeclareClass":["id","typeParameters","extends","mixins","implements","body"],"DeclareFunction":["id","predicate"],"DeclareInterface":["id","typeParameters","extends","body"],"DeclareModule":["id","body"],"DeclareModuleExports":["typeAnnotation"],"DeclareTypeAlias":["id","typeParameters","right"],"DeclareOpaqueType":["id","typeParameters","supertype"],"DeclareVariable":["id"],"DeclareExportDeclaration":["declaration","specifiers","source","attributes"],"DeclareExportAllDeclaration":["source","attributes"],"DeclaredPredicate":["value"],"ExistsTypeAnnotation":[],"FunctionTypeAnnotation":["typeParameters","this","params","rest","returnType"],"FunctionTypeParam":["name","typeAnnotation"],"GenericTypeAnnotation":["id","typeParameters"],"InferredPredicate":[],"InterfaceExtends":["id","typeParameters"],"InterfaceDeclaration":["id","typeParameters","extends","body"],"InterfaceTypeAnnotation":["extends","body"],"IntersectionTypeAnnotation":["types"],"MixedTypeAnnotation":[],"EmptyTypeAnnotation":[],"NullableTypeAnnotation":["typeAnnotation"],"NumberLiteralTypeAnnotation":[],"NumberTypeAnnotation":[],"ObjectTypeAnnotation":["properties","indexers","callProperties","internalSlots"],"ObjectTypeInternalSlot":["id","value"],"ObjectTypeCallProperty":["value"],"ObjectTypeIndexer":["variance","id","key","value"],"ObjectTypeProperty":["key","value","variance"],"ObjectTypeSpreadProperty":["argument"],"OpaqueType":["id","typeParameters","supertype","impltype"],"QualifiedTypeIdentifier":["qualification","id"],"StringLiteralTypeAnnotation":[],"StringTypeAnnotation":[],"SymbolTypeAnnotation":[],"ThisTypeAnnotation":[],"TupleTypeAnnotation":["types"],"TypeofTypeAnnotation":["argument"],"TypeAlias":["id","typeParameters","right"],"TypeAnnotation":["typeAnnotation"],"TypeCastExpression":["expression","typeAnnotation"],"TypeParameter":["bound","default","variance"],"TypeParameterDeclaration":["params"],"TypeParameterInstantiation":["params"],"UnionTypeAnnotation":["types"],"Variance":[],"VoidTypeAnnotation":[],"EnumDeclaration":["id","body"],"EnumBooleanBody":["members"],"EnumNumberBody":["members"],"EnumStringBody":["members"],"EnumSymbolBody":["members"],"EnumBooleanMember":["id","init"],"EnumNumberMember":["id","init"],"EnumStringMember":["id","init"],"EnumDefaultedMember":["id"],"IndexedAccessType":["objectType","indexType"],"OptionalIndexedAccessType":["objectType","indexType"],"JSXAttribute":["name","value"],"JSXClosingElement":["name"],"JSXElement":["openingElement","children","closingElement"],"JSXEmptyExpression":[],"JSXExpressionContainer":["expression"],"JSXSpreadChild":["expression"],"JSXIdentifier":[],"JSXMemberExpression":["object","property"],"JSXNamespacedName":["namespace","name"],"JSXOpeningElement":["name","typeParameters","typeArguments","attributes"],"JSXSpreadAttribute":["argument"],"JSXText":[],"JSXFragment":["openingFragment","children","closingFragment"],"JSXOpeningFragment":[],"JSXClosingFragment":[],"Noop":[],"Placeholder":[],"V8IntrinsicIdentifier":[],"ArgumentPlaceholder":[],"BindExpression":["object","callee"],"Decorator":["expression"],"DoExpression":["body"],"ExportDefaultSpecifier":["exported"],"RecordExpression":["properties"],"TupleExpression":["elements"],"DecimalLiteral":[],"ModuleExpression":["body"],"TopicReference":[],"PipelineTopicExpression":["expression"],"PipelineBareFunction":["callee"],"PipelinePrimaryTopicReference":[],"VoidPattern":[],"TSParameterProperty":["parameter"],"TSDeclareFunction":["id","typeParameters","params","returnType"],"TSDeclareMethod":["decorators","key","typeParameters","params","returnType"],"TSQualifiedName":["left","right"],"TSCallSignatureDeclaration":["typeParameters","parameters","typeAnnotation"],"TSConstructSignatureDeclaration":["typeParameters","parameters","typeAnnotation"],"TSPropertySignature":["key","typeAnnotation"],"TSMethodSignature":["key","typeParameters","parameters","typeAnnotation"],"TSIndexSignature":["parameters","typeAnnotation"],"TSAnyKeyword":[],"TSBooleanKeyword":[],"TSBigIntKeyword":[],"TSIntrinsicKeyword":[],"TSNeverKeyword":[],"TSNullKeyword":[],"TSNumberKeyword":[],"TSObjectKeyword":[],"TSStringKeyword":[],"TSSymbolKeyword":[],"TSUndefinedKeyword":[],"TSUnknownKeyword":[],"TSVoidKeyword":[],"TSThisType":[],"TSFunctionType":["typeParameters","parameters","typeAnnotation"],"TSConstructorType":["typeParameters","parameters","typeAnnotation"],"TSTypeReference":["typeName","typeParameters"],"TSTypePredicate":["parameterName","typeAnnotation"],"TSTypeQuery":["exprName","typeParameters"],"TSTypeLiteral":["members"],"TSArrayType":["elementType"],"TSTupleType":["elementTypes"],"TSOptionalType":["typeAnnotation"],"TSRestType":["typeAnnotation"],"TSNamedTupleMember":["label","elementType"],"TSUnionType":["types"],"TSIntersectionType":["types"],"TSConditionalType":["checkType","extendsType","trueType","falseType"],"TSInferType":["typeParameter"],"TSParenthesizedType":["typeAnnotation"],"TSTypeOperator":["typeAnnotation"],"TSIndexedAccessType":["objectType","indexType"],"TSMappedType":["typeParameter","nameType","typeAnnotation"],"TSTemplateLiteralType":["quasis","types"],"TSLiteralType":["literal"],"TSExpressionWithTypeArguments":["expression","typeParameters"],"TSInterfaceDeclaration":["id","typeParameters","extends","body"],"TSInterfaceBody":["body"],"TSTypeAliasDeclaration":["id","typeParameters","typeAnnotation"],"TSInstantiationExpression":["expression","typeParameters"],"TSAsExpression":["expression","typeAnnotation"],"TSSatisfiesExpression":["expression","typeAnnotation"],"TSTypeAssertion":["typeAnnotation","expression"],"TSEnumBody":["members"],"TSEnumDeclaration":["id","members"],"TSEnumMember":["id","initializer"],"TSModuleDeclaration":["id","body"],"TSModuleBlock":["body"],"TSImportType":["argument","options","qualifier","typeParameters"],"TSImportEqualsDeclaration":["id","moduleReference"],"TSExternalModuleReference":["expression"],"TSNonNullExpression":["expression"],"TSExportAssignment":["expression"],"TSNamespaceExportDeclaration":["id"],"TSTypeAnnotation":["typeAnnotation"],"TSTypeParameterInstantiation":["params"],"TSTypeParameterDeclaration":["params"],"TSTypeParameter":["constraint","default"]}';
var assert = require("power-assert");
setTimeout(() => {
	assert.strictEqual("???", "???"); // => "???"
}, 100);
